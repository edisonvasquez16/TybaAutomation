defaultTasks 'clean', 'aggregate'
group 'com.tyba.testautomation'
version '1.0-SNAPSHOT'
repositories {
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:3.2.3"
        classpath "net.serenity-bdd:serenity-single-page-report:3.2.3"
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    serenityCoreVersion = '3.2.3'
    junitVersion = '4.13.2'
    assertJVersion = '3.22.0'
    logbackVersion = '1.2.11'
    lombokVersion = '1.18.22'
    jsonSchemaValidatorVersion = '4.5.1'
    appiumVersion = '8.0.0-beta2'
    seleniumVersion = '4.1.3'
    mySqlConnector = '8.0.28'
}

dependencies {
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"

    implementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "junit:junit:${junitVersion}",
            "org.junit.platform:junit-platform-launcher:1.8.2",
            "org.junit.jupiter:junit-jupiter-engine:5.8.2",
            "org.junit.vintage:junit-vintage-engine:5.8.2",
            "org.assertj:assertj-core:${assertJVersion}",
            "io.rest-assured:json-schema-validator:${jsonSchemaValidatorVersion}",
            "io.rest-assured:json-path:${jsonSchemaValidatorVersion}",
            "io.appium:java-client:${appiumVersion}",
            "org.seleniumhq.selenium:selenium-java:${seleniumVersion}",
            "mysql:mysql-connector-java:${mySqlConnector}"

    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

clean {
    delete "target"
}

test {
    testLogging.showStandardStreams = true
    maxParallelForks=18
    useJUnitPlatform()
    systemProperties System.getProperties()
    if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
    }
}

task smoke(type: Test) {
    testLogging.showStandardStreams = true
    maxParallelForks=18
    useJUnitPlatform()
    systemProperties System.getProperties()
    systemProperty("tags", "smoke")
}

task all(type: Test) {
    testLogging.showStandardStreams = true
    maxParallelForks=18
    useJUnitPlatform()
    systemProperties System.getProperties()
    systemProperty("tags", "all")
}

serenity {
    reports = ["single-page-html"]
    testRoot = "com.tyba.features"
    requirementsBaseDir = "com.tyba.features"
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)